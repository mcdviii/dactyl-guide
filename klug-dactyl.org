#+TITLE: So What Is This Dactyl Thing & Why Should I Care?
#+AUTHOR: Tim Anderson
#+REVEAL_THEME: moon
#+REVEAL_TRANS: fade
#+REVEAL_MAX_SCALE: 0.85
#+OPTIONS: reveal_slide_number:nil toc:nil num:nil

#+BEGIN_NOTES
 TODO Gather Raw Data for Presentation
 Prices
 Ali Express for Keycap Price
 Digikey for Hardware Cost
 Collect Info & Tutorial Sources for
 #+END_NOTES

* Tim Anderson
Who am I?
- https://github.com/mcdviii
- http://aberrant.online
- [[mailto:timothy.c.anderson@mykolab.com][timothy.c.anderson@mykolab.com]]

#+BEGIN_NOTES
I don't think there's much to tell about myself. I've worked 8 years in
manufacturing for a local furniture manufacturer. About 6 of those years I've worked as a machine operator.
I own a reasonably sized 3D printer; I tinker with electronics & free
software on my free time.
You can follow me through the following links. You won't find me on Facebook or
Twitter, so don't bother looking for me there.
#+END_NOTES

* So, what is this Dactyl Keyboard thing?
[[file:img/brooke_baldwin.jpg]]
* Parameterized, Split-Hand, Concave, Columnar, Ergonomic Keyboard
- Written in Clojure
#+ATTR_REVEAL: :frag (fade-in fade-in fade-in)
[[file:img/chan.png]]
#+BEGIN_NOTES
Those are a lot of fancy words. What does all of that mean? Well we'll look at
the project & see how it compares to a regular keyboard to answer that. But
first I'll talk a little bit about the project.
#+END_NOTES

* History & Background
[[yt:uk3A41U0iO4]]
- [[https://www.youtube.com/watch?v=uk3A41U0iO4]]
- Started March 2015
- Made as an attempt at improving on the Kinesis Advantage2? [[https://twitter.com/adereth][@adereth]]
- Written in Clojure by using a wrapper arond OpenSCAD
#+BEGIN_NOTES
The Dactyl project was originally started in 2015 by a guy named Matt Adereth. I
haven't seen what his motivations for starting this were, but I would guess you
could find some clues to that on his Twitter page. There are some obvious
similarities between this and another keyboard commercially available that I'll
show later on, and I think he drew inspiration & motivation from that.

If you're wondering what it means, dactyl means finger, toe or digit.

The really interesting thing about this project is that the mesh was written in Lisp. If
you're not familiar with OpenSCAD, it's free software which interprets functions
and creates geometry from that. Obviously it uses a lot of math & complex
geometry for more complex objects. Matt didn't like the language that OpenSCAD
used, but was able to serindipitously find a wrapper to go around the program that would
interpret Clojure and convert it into the language that OpenSCAD understands.
#+END_NOTES

* Where is the Project Now?
- Last commit was in 2017
- Left in unfinished state & appears to be abandoned
- Documentation is left unfinished
- OpenSCAD functions don't stay consistant between versions or otherwise
  play nice with lisp wrapper.
- Most challenging build to take on
#+BEGIN_NOTES
So the repository appears to be abandoned since 2017. There are some pull
requests left open, and the physical build documentation has been only partly provided by
community members. Once you understand the basics of how the electronics work, it's
not too complicated, but it reqiures quite a bit of research from dispirate
sources.

The documentation for setting up the workflow to be fairly complete, but changes
between versions of OpenSCAD seem to break significant functionality and make
using the workflow with the wrapper difficult. Many of the meshes other than the
standard one currently have holes in them because of these issues.

Because of all of these reasons, and the shape of the keyboard & minimal
internal clearance for components, in my opinion this is probably one of the
most challenging DIY keyboard projects you could take on.
#+END_NOTES

* Why Tho?
#+BEGIN_NOTES
During my research into this other ergo keyboards I see a recurring
question: "Why would you need/want that.", and I think that it's a fair question.
It smacks of iPhone ownership or RGB lighting: Do you really need that? To the
outside observer it might look like an expensive, showy & unnecessary gadget.
But I think there are real health benefits to using a proper ergonomic keyboard,
and befor I go any further into my build I'd like to justify myself in the eye
of reason.
#+END_NOTES
#+BEGIN_NOTES
Before I do that, I should state that I am not a doctor. I do know how to use Google, so I might as well be
one--but obviously, this is my understanding from my cursory
research. It's not medical advice. Consult your doctor before
making any changes to the ergonomics of your workstations.
#+END_NOTES

* So, let's look at a regular keyboard
[[file:img/KB_United_States.svg]]
- Offset rows are holdovers from typwriters
- QWERTY was not 'made to slow you down'
- Single board is cost effective & efficient, but can encourage unhealthy posture
- Compare bad hand posture to OEM keyboard

* What is RSI?
[[file:img/keyboard_rsi_prevent.jpg]]
- Keep your hands flat and straight out from your shoulders (neutral position)
#+BEGIN_NOTES
But, over the past year I've just decided to make a concious effort to avoid them given my hobbies
& future plans. I use a computer a lot, and I would like to continue using a
computer a lot with as few negative affects as I can manage. I had the means to
build my own badass keyboard, so I did.
If your careers or hobbies depend on your ability to type, it
would arguably be wise to foster that capability & invest at least some time
into developing healther habits, before it's too late. For me, I thought
building my own keyboard would be both a fun & educational project, but with the very
practical benefit of helping to protect myself from injury in the future. I consider my hands to be my greatest physical asset, other than my brain. To be
clear, I don't experience RSI issues, nor have I ever.
#+END_NOTES
#+BEGIN_NOTES
The reason I went over the RSI examples is to demonstrate how a regular
keyboard encourages a certain posture, and hopefully you can see how the designs of these other ergonomic keyboards I'm about to
show you are informed by those issues, and maybe you can see how they attempt to
mitigate some of the bad habits one might form while typing through better
design. Most of these are other open source ergo keyboards that you can build yourself.
#+END_NOTES

* Notable Mentions
#+BEGIN_NOTES
So the original Dactyl design is what I chose to go with, and I'll go over my
reasons for that later on. But first I'd like to quickly show everyone some
other options available out there & what I like and don't like about them.
#+END_NOTES
** [[https://kinesis-ergo.com/shop/advantage2/][Kinesis Advantage2]]

[[file:img/Kinesis_Adv2.jpg]]

#+ATTR_REVEAL: :frag (fade-in fade-in fade-in)
- Advantages: Widely considered one of the best commercially available ergo
  keyboards for poeple suffering from RSI
- Disadvanteges: $320.00 USD, some reviews describe feeling 'cheap'
- Open Source: No
#+BEGIN_NOTES
As I first started really focusing on learning tools like bash & emacs, I
started hearing allusions to RSI, & more than a few references to this keyboard.
It's probably the best commercial ergo keyboard you can get, but it comes at a
price. Also, I think it was a review by Linus Tech Tips where he describes the
feel of the plastic being light & inexpensive. Not something you want to hear
when you drop over $300 on something exclusively commercial.
#+END_NOTES

** [[https://ergodox-ez.com/][ErgoDox (EZ)]]

[[file:img/Ergodox_EZ.jpg]]

#+ATTR_REVEAL: :frag (fade-in fade-in fade-in)
- Advantages: Lots of support if building from scratch, also may be a better
  product than Advantage2
- Disadvantages: Also about $300 if purchased commercially (depending on the options)
- Open Source: Both commercially available & open source
#+BEGIN_NOTES
One of the most popular ergo keyboards I've seen. It's garnered the attention &
a review from [[https://www.youtube.com/watch?v=LALQsqZP1nA][Linus Tech Tips]], and has a [[https://www.ergodox.io/][long open source history]]. As far as I
can tell, the Ergodox project kickstarted the idea of open source
keyboard hardware. You see references to it everywhere, and its popularity on
the ergo keyboard space is unavoidable. Almost any split, open hardware design
available has borrowed something from the ErgoDox. If you go the DIY route, you can find blank PCBs somewhat
readily, and the rest of the parts can be easily sourced yourself.
#+END_NOTES

** [[https://github.com/nicinabox/lets-split-guide][Let's Split]]

[[file:img/Let's_Split.jpg]]

#+ATTR_REVEAL: :frag (fade-in fade-in fade-in)
- Advantages: Split-hand, simple, affordable design (~$100 USD)
- Disadvantages: Not concave
- Open Source: Yes
#+BEGIN_NOTES
This was my first introduction to the idea of an open source keyboard. I was
browsing thingiverse (A place where people share their 3D print designs), and
someone had shared a brakcket they used to attach this keyboard to their laptop.
I remembered that, and after looking at the previou Kinesis keyboard, I wondered
if anyone had started a project similar to that design, but open source & with a
split form factor. Someone had, and that's why I'm here.
#+END_NOTES

** [[https://atreus.technomancy.us/][Atreus]]

[[file:img/Atreus.jpg]]

#+ATTR_REVEAL: :frag (fade-in fade-in fade-in)
- Advantages: Small, single-board form factor
- Disadvantages: Not a split design?
- Open Source: Yes
#+BEGIN_NOTES
This is another keyboard I saw referenced a lot. It's a single board & not
split, but it's small (the website shows it fitting in someone's jeans pocket).
The single board design could be an advantage or disadvantage depending on what
you're using it for. It's potentially less comfortable to use, but I see it
being easy to grab & go if you're using it in a mobile set-up.
#+END_NOTES

** [[http://troyfletcher.net/keyboard_sales.html][Signum 3 (Troy Fletcher)]]

[[file:img/Signum3.0.jpg]]

#+ATTR_REVEAL: :frag (fade-in fade-in fade-in)
- Advantages: Very simple design (solder on components, nothing else to worry about)
- Disadvantages: PCB is $80, no case for protection
- Open Source: Yes?
#+BEGIN_NOTES
The guy who makes this is a freelance programmer based in Kentucky. He has a
youtube channel that's pretty interesting if you're into vlogs. The notable
differences between this & Atreus on the previous slide are the thumb cluster
positions and the exposed PCB. It does look like the entire board is covered
with a solder mask, but it won't be as protected if dropped. It looks like there
is a repo made for this on github, but there's not much in it. You may need to
contact the author for product designs if you need them.
#+END_NOTES

* Other Dactyl Variations
** [[https://github.com/adereth/dactyl-keyboard/pull/48][Dactyl Ergodox]]

[[file:img/Dactyl Ergodox.png]]

#+ATTR_REVEAL: :frag (fade-in fade-in fade-in)
- Advantages: Reuse your Ergodox keycaps (finding correct amount of keys can be difficult)
#+REVEAL: split
- Disadvantages: Incomplete design
- Open Source: Yes
#+BEGIN_NOTES
This was a pull request by Joe Devivo (One of the writers of the earlier build
guides). He was attempting to add some changes to fit the Ergodox keycaps, but
the latest update to the pull was from 2017. /u/chrystalhand has apparently made
more updates to the design and is [[https://www.reddit.com/user/crystalhand/comments/96xu7g/3d_printed_dactylmanuform_cases/][trying to market it on Reddit]] and [[https://ohkeycaps.com/products/built-to-order-dactyl-manuform-keyboard][OhKeycaps.com]]. I don't know if
he's made the source available.
#+END_NOTES

** [[https://github.com/adereth/dactyl-keyboard/tree/master/things][Lightcycle Dactyl]]

[[file:img/LightCycle.jpeg]]

#+ATTR_REVEAL: :frag (fade-in fade-in)
- Advantages: Slightly smaller footprint (fewer keys)
#+REVEAL: split
- Disadvantages: STL files for 3D printing appear to need more repair than basic model
- Open Source: Yes
#+BEGIN_NOTES
In the main repository you'll find this as an option along with the 'cherry'
option for the same version. The LightCycle version of the Dactyl has fewer
thumb cluster switch positions and one less row of keys It was originally designed to match with the [[http://matias.ca/switches/][Matias
ALPS-inspired mechanical keyswitches]]. The 'cherry' version of this is the same
design, but are meant to be fit with Cherry MX mechanical switches.
#+END_NOTES

** [[https://github.com/tshort/dactyl-keyboard][Dactyl Manuform]]

[[file:img/Dactyl Manuform.jpg]]

#+ATTR_REVEAL: :frag (fade-in fade-in fade-in)
- Advantages: Thumb clusters are brought down to a more natural position, Case
  is larger making wiring less tedious
#+REVEAL: split
- Disadvantages: Must be wired by hand, all of the challenges that come with
  original Dactyl
- Open Source: Yes
#+BEGIN_NOTES
I think probably the best designed of all of the options I've seen. The Manuform
retains all of the features you would look for in the original, but lowers the
thumb clusters so that you hands can remain in a more natural position. Notable
hardware differences between this & the original are the use of DSA keycaps used
and the use of 2 Pro Micros for the microcontroller. I'll probably build &
switch to this in the future.
#+END_NOTES
#+REVEAL_HTML: <section data-background-iframe="https://xahlee.info/kbd/diy_keyboards_index.html" data-background-interactive></section>
* More Do-it-Yourself Options
=There is a very nice list of other ergonomic keyboards, with pictures, on Xah Lee's website.=
- [[http://xahlee.info/kbd/diy_keyboards_index.html]]

* Reasons for Choosing Dactyl
- Open Source
- Looked like the most comfortable design
- Kinesis Advantage form factor, but open source (non-commercial)
- Also looked hella cool
** My Reasons for Building by Hand Instead of Purchasing
- At the time there were none being manufactured
- Sense of self-satisfaction
- I already own a 3D printer
- Screw paying someone else >$300, I'll just build my own!
- One year later joke
* Build Overview
** Shell/Case & Hardware
- Time
- Apologize for lack of media
- Print process involved trial & error. Segway into 3D print & support material.
- Hardware dimensions & heating countersunk screws. Make point of heatshrink on standoffs.
- Hardware, clearance & dimensions
#+BEGIN_NOTES

#+END_NOTES

** Switches & Keycaps
- Fits Cherry MX switches, explain what they are
- Go over keycap profiles
- Keycap material, count & price
** Etching
- 1:1 ratio of 3% Hydrogen Peroxide & Acid Magic (Marketed as 'safer' Muriatic
  Acid, found on Amazon.)
- All etching tutorial info (Storage & reuse)
- PCB etching (I probably went the most expensive route.)
- PCB design
*** Etching Process
#+REVEAL_HTML: <section><video controls><source data-src="media/Etching-resize.mp4" type="video/mp4" /></video></section>
#+BEGIN_NOTES
Make note of 'adding the acid', copper lifting, color of solution, Kapton tape
backing & sanding residue (220)
#+END_NOTES
** PCB & Wiring
- The circuit design in the repo is inaccurate. I had to flip around some of
  the designs because they were backwards. I didn't find this out until after my
  first attempt at etching. Luckily I had another sheet of Pyralux that I bought
  in case I encountered those kinds of problems.
- Had to cross reference wiring with imgur images.
- Resistors for LEDs
- Which way to wire the diodes
- Wiring the Teensy
- How the keyboard is controlled by the MC (key matrix)
- Choosing LED Resistors
**** PSA: TRRS /not/ TRS!
- Include comparison.
#+BEGIN_NOTES

#+END_NOTES
** Firmware
** How Does it Work?
[[file:img/howkeymatriceswork.gif]]
#+BEGIN_NOTES

#+END_NOTES

* Was It Worth It?
- Parts table
* Resources
- [[https://drop.com][Drop.com (formerly MassDrop)]]
Crowd sourced, limited manufacturing.
#+BEGIN_NOTES

#+END_NOTES
- [[https://ohkeycaps.com][OhKeycaps.com]]
Working with members of the reddit mechanical keyboard community to
commercialize different Dactyl variations.
- [[https://mehkee.com/products/lets-split-pcb?variant=46050392207][Let's Split PCBs]]
=I have no affiliation or experience with the above. YMMV!=
** Tutorials
[[https://www.youtube.com/watch?v=4dZ2LKe7660
j][- Etching with Muriatic Acid & Hydrgen Peroxide]]
- [[https://www.instructables.com/id/Making-flexible-PCBs-with-a-laser-jet-printer-or-c/]]
- [[https://www.instructables.com/id/DIY-Flexible-Printed-Circuits/]]
- Hackaday Printer
- AfrotechMods
-
** Hardware & Accessories Vendors
- [[https://kbdfans.com]]
- [[https://aliexpress.com]]
  [[https://digikey.com]]
- [[https://pimpmykeyboard.com/]]
- [[https://mechanicalkeyboards.com/shop/index.php?l=product_list&c=9]]
